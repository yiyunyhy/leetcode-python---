#1.
class Solution:
    def deckRevealedIncreasing(self, deck: List[int]) -> List[int]:
        from collections import deque
        deck.sort(reverse=True)
        ans = deque()
        for i in deck:
            if ans:
                ans.appendleft(ans.pop())
            ans.appendleft(i)
        return list(ans)
#2.
class Solution:
    def deckRevealedIncreasing(self, deck: List[int]) -> List[int]:
        display = sorted(deck,reverse=True)
        res = []
        for i in display:
            res.append(i)
            #print(display.index(i))
            if display.index(i) != len(display) -1:
                res.append(res.pop(0))
        res.reverse()
        return res
        
#3.
#反向收牌
        #1、deck数组降序排序，并将最大值给result数组
        #2、将底部的牌放到顶部
        #3、新加一张牌到顶部
        #4、重复2、3直到所有牌都加进来
        deck.sort(reverse = True)
        res = [deck[0]]
        for i in range(1, len(deck)):
            base = res[-1]
            del res[-1]
            res.insert(0,base)
            res.insert(0,deck[i])
        return res
