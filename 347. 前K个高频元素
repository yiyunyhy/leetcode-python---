#1.
class Solution:
    def topKFrequent(self, nums: List[int], k: int) -> List[int]:
        d = {}
        for num in nums:
            if num in d:
                d[num] += 1
            else:
                d[num] = 1
        
        d = sorted(d.items(), key = lambda x:x[1], reverse = True)
        res = []
        for i,j in d:
            k -= 1
            res.append(i)
            if k == 0:
                return res
        return []
#2.
from collections import Counter
class Solution:
    def topKFrequent(self, nums: List[int], k: int) -> List[int]:
        count = Counter(nums)
        res = heapq.nlargest(k, count.keys(), key=count.get)
        return res
